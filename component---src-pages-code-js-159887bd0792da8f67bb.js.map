{"version":3,"sources":["webpack:///./src/components/sketches/dancinglines.js","webpack:///./src/components/modal.js","webpack:///./src/pages/code.js"],"names":["dancingLine1","dancingLine2","snake","every_nth","arr","nth","filter","e","i","dancinglines","p5","makeDancingLine","flip","history","col","v1","createVector","v2","x1Angle","y1Angle","x2Angle","y2Angle","r1","r2","display","set","sin","push","x","y","length","splice","forEach","linea","stroke","strokeWeight","line","x1AngleOff","y1AngleOff","x2AngleOff","y2AngleOff","setup","finalForm","lowResLine","createCanvas","background","noFill","strokeCap","PROJECT","beginShape","curveVertex","console","log","endShape","draw","translate","width","height","App","render","sketch","Component","ModalStyles","position","top","left","transform","backgroundColor","zIndex","OverlayStyles","right","bottom","Modal","open","children","toggle","ReactDOM","createPortal","style","onClick","document","getElementById","sketches","title","thumbnail","CodePage","useState","visible","setVisible","currentSketch","setCurrentSketch","toggleVisibility","className","Layout","map","pen","key","component","src","alt"],"mappings":"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","file":"component---src-pages-code-js-159887bd0792da8f67bb.js","sourcesContent":["import React, { Component } from \"react\"\nimport {loadableP5 as P5Wrapper} from '../loadable';\n// import {Vector} from \"p5\"\n\nlet bgColor = \"#18020C\"\nlet dancingLine1\nlet dancingLine2\nlet snake\n// let twoCircles\n// let follower\n// let snakeAttractor\n\nfunction isOdd(num) { return num % 2;}\nconst every_nth = (arr, nth) => arr.filter((e, i) => i % nth === nth - 1)\n\nfunction isEven(value) {\n\tif (value%2 == 0)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\n\nfunction dancinglines (p5) {\n  p5.setup = () => {\n    p5.createCanvas(700,700)\n    p5.background(bgColor)\n    // p5.frameRate(2)\n    dancingLine1 = makeDancingLine()\n    dancingLine2 = makeDancingLine(true)\n    snake = Snake()\n    // twoCircles = TwoCircles()\n    // snakeAttractor = SnakeAttractor(Follower)\n  }\n  \n  p5.draw = () => {\n    p5.background(bgColor)\n    p5.translate(p5.width/2, p5.height/2)\n    dancingLine1.display()\n    dancingLine2.display()\n    snake.display()\n    // twoCircles.display()\n    // snakeAttractor.display()\n  }\n\n  function makeDancingLine(flip) {\n    let history = []\n    let linesAmt =60\n    let col = 255\n    let v1 = p5.createVector(0,0)\n    let v2 = p5.createVector(0,0)\n    \n    let x1Angle = flip ? 90 : 0\n    let y1Angle = flip ? 90 : 0\n    let x2Angle = flip ? 90 : 0\n    let y2Angle = flip ? 90 : 0\n  \n    let x1AngleOff = 0.03\n    let y1AngleOff = 0.002\n    let x2AngleOff = 0.015\n    let y2AngleOff = 0.02  \n    \n    let r1 = flip ? 250 : 300 \n    let r2 = flip ? 250 : 300 \n\n    function display() {\n      v1.set(r1 * p5.sin(x1Angle), r1 * p5.sin(y1Angle))\n      v2.set(r2 * p5.sin(x2Angle), r2 * p5.sin(y2Angle))\n  \n      history.push([v1.x, v1.y, v2.x, v2.y]) \n      \n      if (history.length > linesAmt) history.splice(0,1)\n      \n      col = flip\n        ? \"#E5FFDE\"\n        : \"#634B66\"\n  \n      history.forEach((linea, i) => {\n        p5.stroke(col) \n        p5.strokeWeight(2)\n        p5.line(linea[0],linea[1],linea[2],linea[3])\n      })\n  \n      x1Angle += flip ? x1AngleOff : x1AngleOff + 0.01\n      y1Angle += flip ? y1AngleOff : y1AngleOff + 0.01\n      x2Angle += flip ? x2AngleOff : x2AngleOff + 0.01\n      y2Angle += flip ? y2AngleOff : y2AngleOff + 0.01\n    }\n  \n    return {\n      display,\n    }\n  }  \n\n  function Snake() {\n    let history = []\n    let linesAmt = 100\n    let col = 255\n    let v1 = p5.createVector(0,0)\n    let finalForm = false\n    let lowResLine = []\n    let x1Angle = 90\n    let y1Angle = 90\n    let x1AngleOff = 0.01\n    let y1AngleOff = 0.002\n    let r1 = 250\n\n    function display() {\n      v1.set(r1 * p5.sin(x1Angle), r1 * p5.sin(y1Angle))\n\n      history.push([v1.x, v1.y]) \n      lowResLine = [history[0], ...every_nth(history, 10), history[history.length-1]]\n\n      if (history.length > linesAmt) {\n        history.splice(0,1)\n        finalForm = true\n      }\n      \n      p5.stroke(col) \n      p5.noFill()\n      p5.strokeWeight(10)\n      p5.strokeCap(p5.PROJECT)\n      p5.beginShape()\n      if (finalForm) {\n        lowResLine.forEach((x, i) => {\n          // i === lowResLine.length-1 && p5.ellipse(x[0], x[1], 30)\n          // i === 0 && p5.ellipse(x[0], x[1], 30)\n          p5.curveVertex(x[0], x[1])\n        })      \n        console.log('low')\n      } else {\n        history.forEach((x,i) => {\n          // i === history.length-1 && p5.ellipse(x[0], x[1], 30)\n          // i === 0 && p5.ellipse(x[0], x[1], 30)\n          p5.curveVertex(x[0], x[1])\n        })      \n        console.log('high')\n      }\n      p5.endShape()\n  \n      x1Angle += x1AngleOff  + 0.002\n      y1Angle += y1AngleOff  + 0.012\n    }\n    return {\n      display,\n    }\n  }\n  function TwoCircles() {\n    let history = []\n    let linesAmt = 100\n    let col = 255\n    let v1 = p5.createVector(0,0)\n    let finalForm = false\n    let lowResLine = []\n    let x1Angle = 0\n    let y1Angle = 30\n    let x1AngleOff = 0.002\n    let y1AngleOff = 0.001\n    let r1 = 300\n\n    function display() {\n      v1.set(r1 * p5.sin(x1Angle), r1 * p5.sin(y1Angle))\n\n      history.push([v1.x, v1.y]) \n      lowResLine = [history[0], ...every_nth(history, 50), history[history.length-1]]\n\n      if (history.length > linesAmt) {\n        history.splice(0,1)\n        finalForm = true\n      }\n      \n      p5.stroke(col) \n      p5.noFill()\n      p5.strokeCap(p5.ROUND)\n      if (finalForm) {\n        lowResLine.forEach((x, i) => {\n          p5.strokeWeight(10)\n          i === lowResLine.length-1 && p5.ellipse(x[0], x[1], 30)\n          // p5.strokeWeight(1)\n          // i === 0 && p5.ellipse(x[0], x[1], 10)\n        })      \n      } else {\n        history.forEach((x,i) => {\n          p5.strokeWeight(10)\n          i === history.length-1 && p5.ellipse(x[0], x[1], 30)\n          // p5.strokeWeight(1)\n          // i === 0 && p5.ellipse(x[0], x[1], 10)\n        })      \n      }\n\n      // p5.stroke(255)\n      // p5.strokeWeight(2)\n      // p5.line(lowResLine[0][0], lowResLine[0][1], lowResLine[lowResLine.length-1][0], lowResLine[lowResLine.length-1][1])\n      \n      x1Angle += x1AngleOff  + 0.009\n      y1Angle += y1AngleOff  + 0.008\n    }\n    return {\n      display,\n    }\n  }\n\n  // function Follower() {\n  //   let pos = p5.createVector(200,200)\n  //   let vel = Vector.random2D()\n  //   vel.mult(1)\n  //   function display(x,y) {\n  //     let attractor = p5.createVector(x,y)\n  //     let acc = Vector.sub(attractor, pos)\n  //     acc.setMag(0.1)\n  //     vel.add(acc)\n  //     pos.add(vel)\n  //     p5.stroke(255)\n  //     p5.strokeWeight(2)\n  //     p5.ellipse(pos.x, pos.y, 40)\n  //   }\n  //   return {\n  //     display,\n  //   }\n  //  }\n\n  // function SnakeAttractor(Follower) {\n  //   let col = '255,0,0'\n  //   let v1 = p5.createVector(0,0)\n  //   let x1Angle = 90\n  //   let y1Angle = 90\n  //   let x1AngleOff = 0.01\n  //   let y1AngleOff = 0.002\n  //   let r1 = 250\n  //   let followr = Follower()\n\n  //   function display() {\n  //     v1.set(r1 * p5.sin(x1Angle), r1 * p5.sin(y1Angle))\n\n      \n  //     followr.display(v1.x, v1.y)\n  //     p5.stroke(255,0) \n  //     // p5.strokeWeight(30)\n  //     p5.ellipse(v1.x, v1.y, 10)\n      \n  //     x1Angle += x1AngleOff  + 0.002\n  //     y1Angle += y1AngleOff  + 0.012\n  //   }\n  //   return {\n  //     display,\n  //   }\n  // }\n}\n\nexport default class App extends Component{\n  render() {\n    return <P5Wrapper sketch={dancinglines} />\n  }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nconst ModalStyles = {\n  position: 'fixed',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%,-50%)',\n  backgroundColor: '#fff',\n  zIndex: 1000,\n}\n\nconst OverlayStyles = {\n  position: 'fixed',\n  top: '0',\n  left: '0',\n  right: '0',\n  bottom: '0',\n  backgroundColor: 'rgba(0,0,0,0.7)',\n  zIndex: 1000,\n}\n\nexport default function Modal({open, children, toggle}) {\n  if (!open) return null\n\n  return ReactDOM.createPortal(\n    <>\n      <div style={OverlayStyles}>\n        <div style={ModalStyles}>\n          <p onClick={toggle}>X</p>\n          {children}\n        </div>\n      </div>\n    </>, document.getElementById(\"portal\"))\n}\n\n","import React, { useState, useEffect } from \"react\";\nimport Dancinglines from '../components/sketches/dancinglines'\nimport Layout from '../components/Layout'\nimport Modal from '../components/modal'\nconst sketches = [\n  {\n    title: 'one',\n    thumbnail: 'https://i.imgur.com/Ll0bZIp.png',\n    sketch: <Dancinglines />,\n  },\n  {\n    title: 'two',\n    thumbnail: 'https://i.imgur.com/Ll0bZIp.png',\n    sketch: <Dancinglines />\n  }\n]\n\nconst CodePage = () => {\n  const [visible, setVisible] = useState(false)\n  const [currentSketch, setCurrentSketch] = useState(null)\n  const toggleVisibility = () => setVisible(!visible);\n\n  const showSketch = (component) => {\n    setCurrentSketch(component)\n    console.log(component);\n    toggleVisibility()\n  }\n\n  return (\n  <div className=\"bg-gray-400\">\n    <Layout>\n\n      <Modal open={visible} toggle={toggleVisibility}>\n        {currentSketch}\n      </Modal>\n\n      {/* <button onClick={toggleVisibility}>Show</button> */}\n      {/* {visible && <Dancinglines />} */}\n\n      <div className=\"max-w-lg\">\n        {sketches.map((pen, i) => (\n          <div className=\"m-8\" key={i}>\n            <img onClick={() => showSketch(pen.sketch)} className=\"\" src={pen.thumbnail} alt=\"\" />\n          </div>\n        ))}\n      </div>\n    </Layout>\n  </div>\n  )\n}\n\nexport default CodePage\n"],"sourceRoot":""}